name: "[DEV] 배포 테스트"
on:
  workflow_dispatch:
    inputs:
      target:
        description: "배포 타겟"
        type: choice
        required: true
        options:
          - "admin"
          - "web"

env:
  CACHED_DEPENDENCY_PATHS: "**/node_modules"

jobs:
  job_install_dependencies:
    name: "디펜던시 install"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: "Repository 체크아웃"
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          ref: "main"
      - name: Node.js 세팅
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: 디펜던시 cache key 추출
        id: compute_lockfile_hash
        run: echo "hash=${{ hashFiles('yarn.lock') }}" >> $GITHUB_OUTPUT
      - name: "캐시 확인"
        uses: actions/cache@v3
        id: cache_dependencies
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}
      - name: 디펜던시 설치
        if: steps.cache_dependencies.outputs.cache-hit == ''
        run: yarn
    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}

  deploy:
    name: APP 빌드
    needs: job_install_dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: AWS 환경 세팅
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Repositry 체크아웃
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          ref: main
      - name: Node.js 세팅
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: APP 빌드 캐시 키 세팅
        id: compute_app_build_hash
        run: echo "key=${{ runner.os }}-${{github.event.inputs.target}}-nextapp-${{ hashFiles('yarn.lock') }}" >> $GITHUB_OUTPUT
      - name: 디펜던시 캐시 확인
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.job_install_dependencies.outputs.dependency_cache_key }}
      - name: APP 빌드 캐시 키 확인
        uses: actions/cache@v3
        with:
          path: apps/${{github.event.inputs.target}}
          key: ${{ steps.compute_app_build_hash.outputs.key }}
          restore-keys: ${{ runner.os }}-${{github.event.inputs.target}}-nextapp-${{ hashFiles('yarn.lock') }}
      - name: Turborepo Build Cache 로드
        uses: felixmosh/turborepo-gh-artifacts@v2
        with:
          server-token: ${{ github.token }}
          repo-token: ${{ github.token }}
      - name: APP deploy - ${{github.event.inputs.target}}
        run: APP=${{github.event.inputs.target}} yarn deploy:dev --scope=${{github.event.inputs.target}} --api="http://127.0.0.1:9080" --token="${{ github.token }}" --team="next-13-aws"
