{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ServerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/terraform-app-lambda"
      }
    },
    "ImageOptimizationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/terraform-app-image-lambda"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "terraform-app",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/terraform-app-lambda:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/terraform-app-image-lambda:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/terraform-app-lambda:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/terraform-app-image-lambda:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "terraform-app",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ServerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/terraform-app/dev/1701314109940-2023-11-30T03:15:09.940Z/server-function.zip"
        },
        "Handler": "index.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "terraform-app-lambda",
        "MemorySize": 512,
        "Timeout": 10,
        "Architectures": [
          "arm64"
        ],
        "Description": "Default lambda for Next Cloudfront distribution",
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ServerLogGroup"
      ]
    },
    "ImageOptimizationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/terraform-app/dev/1701314109940-2023-11-30T03:15:09.940Z/image-optimization-function.zip"
        },
        "Handler": "index.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "terraform-app-image-lambda",
        "MemorySize": 512,
        "Timeout": 10,
        "Architectures": [
          "arm64"
        ],
        "Description": "Image Lambda for Next CloudFront distribution",
        "Environment": {
          "Variables": {
            "BUCKET_NAME": "terraform-app-assets"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ImageOptimizationLogGroup"
      ]
    },
    "ServerLambdaVersionMldUJlKvvuEDq5PuvXjr7iPQMr99FBRHJbkVJxWjJY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ServerLambdaFunction"
        },
        "CodeSha256": "pEZovXhdxAvyNfkPfAE/27WekPbelqhq5xYnnTxLo10=",
        "Description": "Default lambda for Next Cloudfront distribution"
      }
    },
    "ServerLambdaFunctionUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "ServerLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "ServerLambdaPermissionFnUrl": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ServerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunctionUrl",
        "Principal": "*",
        "FunctionUrlAuthType": "NONE"
      }
    },
    "ImageOptimizationLambdaVersionyy15N6Wy0FEiEkf27QyRA34gO8renIwaFOzUBf1ag": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ImageOptimizationLambdaFunction"
        },
        "CodeSha256": "ulfEqgqPsx7ofYvFZhkI83cI0QRQpxrLh+DtezMFPe4=",
        "Description": "Image Lambda for Next CloudFront distribution"
      }
    },
    "ImageOptimizationLambdaFunctionUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "ImageOptimizationLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "ImageOptimizationLambdaPermissionFnUrl": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ImageOptimizationLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunctionUrl",
        "Principal": "*",
        "FunctionUrlAuthType": "NONE"
      }
    },
    "AssetsBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "terraform-app-assets"
      }
    },
    "AssetsBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "AssetsBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Sub": "${AssetsBucket.Arn}/*"
              },
              "Principal": {
                "Service": "cloudfront.amazonaws.com"
              },
              "Condition": {
                "StringEquals": {
                  "AWS:SourceArn": {
                    "Fn::Sub": "arn:aws:cloudfront::${AWS::AccountId}:distribution/${DefaultDistribution}"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "DefaultDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Enabled": true,
          "ViewerCertificate": {
            "AcmCertificateArn": "AAAAAAAARRRRRRRRRRRRRRNNNNNNNNNNN",
            "MinimumProtocolVersion": "TLSv1.1_2016",
            "SslSupportMethod": "sni-only"
          },
          "Origins": [
            {
              "Id": "ServerFunctionOrigin",
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "ServerLambdaFunctionUrl",
                          "FunctionUrl"
                        ]
                      }
                    ]
                  }
                ]
              },
              "CustomOriginConfig": {
                "HTTPSPort": 443,
                "OriginProtocolPolicy": "https-only"
              }
            },
            {
              "Id": "StaticAssetOrigin",
              "DomainName": {
                "Fn::GetAtt": [
                  "AssetsBucket",
                  "RegionalDomainName"
                ]
              },
              "S3OriginConfig": {
                "OriginAccessIdentity": ""
              },
              "OriginAccessControlId": {
                "Fn::GetAtt": [
                  "CloudFrontAccessToS3Bucket",
                  "Id"
                ]
              }
            },
            {
              "Id": "ImageOptimizationFunctionOrigin",
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "ImageOptimizationLambdaFunctionUrl",
                          "FunctionUrl"
                        ]
                      }
                    ]
                  }
                ]
              },
              "CustomOriginConfig": {
                "HTTPSPort": 443,
                "OriginProtocolPolicy": "https-only"
              }
            }
          ],
          "OriginGroups": {
            "Quantity": 1,
            "Items": [
              {
                "Id": "ServerAndStaticAssetOriginGroup",
                "FailoverCriteria": {
                  "StatusCodes": {
                    "Quantity": 2,
                    "Items": [
                      500,
                      502
                    ]
                  }
                },
                "Members": {
                  "Quantity": 2,
                  "Items": [
                    {
                      "OriginId": "ServerFunctionOrigin"
                    },
                    {
                      "OriginId": "StaticAssetOrigin"
                    }
                  ]
                }
              }
            ]
          },
          "DefaultCacheBehavior": {
            "MinTTL": 0,
            "DefaultTTL": 0,
            "MaxTTL": 31536000,
            "TargetOriginId": "ServerAndStaticAssetOriginGroup",
            "ViewerProtocolPolicy": "redirect-to-https",
            "AllowedMethods": [
              "GET",
              "HEAD",
              "OPTIONS"
            ],
            "CachedMethods": [
              "HEAD",
              "GET"
            ],
            "Compress": true,
            "ForwardedValues": {
              "QueryString": true,
              "Headers": [
                "x-op-middleware-request-headers",
                "x-op-middleware-response-headers",
                "x-nextjs-data",
                "x-middleware-prefetch"
              ],
              "Cookies": {
                "Forward": "all"
              }
            }
          },
          "CacheBehaviors": [
            {
              "TargetOriginId": "StaticAssetOrigin",
              "ViewerProtocolPolicy": "https-only",
              "PathPattern": "/_next/static/*",
              "Compress": true,
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS"
              ],
              "CachedMethods": [
                "HEAD",
                "GET"
              ],
              "ForwardedValues": {
                "QueryString": false
              }
            },
            {
              "TargetOriginId": "ServerFunctionOrigin",
              "ViewerProtocolPolicy": "https-only",
              "PathPattern": "/api/*",
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "POST",
                "PATCH",
                "DELETE"
              ],
              "ForwardedValues": {
                "QueryString": true,
                "Cookies": {
                  "Forward": "all"
                },
                "Headers": [
                  "Authorization",
                  "Host",
                  "Accept-Language"
                ]
              }
            },
            {
              "TargetOriginId": "ImageOptimizationFunctionOrigin",
              "ViewerProtocolPolicy": "https-only",
              "PathPattern": "/_next/image",
              "AllowedMethods": [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "POST",
                "PATCH",
                "DELETE"
              ],
              "ForwardedValues": {
                "QueryString": true,
                "Headers": [
                  "Accept"
                ]
              }
            },
            {
              "TargetOriginId": "ServerFunctionOrigin",
              "ViewerProtocolPolicy": "https-only",
              "PathPattern": "/_next/data/*",
              "AllowedMethods": [
                "GET",
                "HEAD"
              ],
              "ForwardedValues": {
                "QueryString": true,
                "Cookies": {
                  "Forward": "all"
                },
                "Headers": [
                  "x-op-middleware-request-headers",
                  "x-op-middleware-response-headers",
                  "x-nextjs-data",
                  "x-middleware-prefetch"
                ]
              }
            }
          ]
        }
      }
    },
    "CloudFrontAccessToS3Bucket": {
      "Type": "AWS::CloudFront::OriginAccessControl",
      "Properties": {
        "OriginAccessControlConfig": {
          "Name": "CloudFrontAccessToS3BucketOriginAccess",
          "OriginAccessControlOriginType": "s3",
          "SigningBehavior": "always",
          "SigningProtocol": "sigv4"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-terraform-app-dev-ServerlessDeploymentBucketName"
      }
    },
    "ServerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ServerLambdaVersionMldUJlKvvuEDq5PuvXjr7iPQMr99FBRHJbkVJxWjJY"
      },
      "Export": {
        "Name": "sls-terraform-app-dev-ServerLambdaFunctionQualifiedArn"
      }
    },
    "ServerLambdaFunctionUrl": {
      "Description": "Lambda Function URL",
      "Value": {
        "Fn::GetAtt": [
          "ServerLambdaFunctionUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": "sls-terraform-app-dev-ServerLambdaFunctionUrl"
      }
    },
    "ImageOptimizationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ImageOptimizationLambdaVersionyy15N6Wy0FEiEkf27QyRA34gO8renIwaFOzUBf1ag"
      },
      "Export": {
        "Name": "sls-terraform-app-dev-ImageOptimizationLambdaFunctionQualifiedArn"
      }
    },
    "ImageOptimizationLambdaFunctionUrl": {
      "Description": "Lambda Function URL",
      "Value": {
        "Fn::GetAtt": [
          "ImageOptimizationLambdaFunctionUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": "sls-terraform-app-dev-ImageOptimizationLambdaFunctionUrl"
      }
    }
  }
}